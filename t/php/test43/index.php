<?PHP
require_once(D_PATH_HOME."t/lib/include_ba.php");
require_once(D_PATH_HOME."t/lib/include_LCP.php");

$obj = new BAmethod();
$lcp  = new LCPmethod();
//-------------------------------------------------------------
//設問
//-------------------------------------------------------------
$array_exam[1] = array(
					 1=>"巨大地震を想定した初動の心構えや行動指針を作成している。"
					,2=>"巨大地震が発生した際、居住地で、どのような事態が発生し、生活環境がどのように変化するかなど、自治体の被災想定などを参考に、我が家の巨大地震シナリオを作成している。"
					,3=>"巨大地震が発生した際、何をすべきか、という行動や連絡方法等を記した、家族全員が携帯可能な小冊子、マニュアル、スマホの電子書籍などがある。"
					,4=>"いつ巨大地震が発生しても、初動、サバイバル目的で利用可能な食料品、保存水、ヘルメットなどの震災備蓄品を保持している。"
					,5=>"巨大地震が発生した際に避難すべき場所やタイミングについて、自治体からの情報を入手している。"
				);

$array_exam[2] = array(
					 6=>"巨大地震が発生した際に避難すべき場所やタイミングについて、自治体からの情報を家族で共有している。（一人暮らしの場合は実家を設定）"
					,7=>"震災により、家屋の損傷や液状化による周辺道路などの被災により、居住が困難な場合を想定して、実家を含め、長期間滞在可能な居所を確保している。"
					,8=>"外出している時に巨大地震が発生した場合の対応方法や家族への連絡方法について家族全員が理解している。（一人暮らしの場合は実家を設定）"
					,9=>"外出している時に巨大地震が発生した場合の対応方法や家族への連絡方法について家族全員が実践出来る。（一人暮らしの場合は実家を設定）"
					,10=>"巨大地震発生直後、他の誰かがパニックによって誤った指示を出すことがあるため、自らの判断で行動することを家族全員が理解している。"
				);
$array_exam[3] = array(
					 11=>"巨大地震が発生した際の安否確認のための訓練を家庭内で実施している。（一人暮らしの人は、実家への安否報告）"
					,12=>"巨大地震に際して帰宅困難者になる可能性があり、数日会社内で寝泊まりすることを家族が把握している。（一人暮らしの場合は実家を設定）"
					,13=>"地域やコミュニティで定期的に実施される防災訓練に参加している。"
					,14=>"会社で定期的に実施される防災訓練に参加している。"
					,15=>"巨大地震に対応するための、最新の知識や知恵をテレビやインターネット等で入手している。（津波、液状化、長周期地震動、地盤増幅率など）"
				);
$array_exam[4] = array(
					 16=>"巨大地震に対応するための、最新の知識や知恵を、居住地に当てはめて、その対応を考えている。"
					,17=>"被災時に、家族の健康状態を把握している近所の「かかりつけ医」や「かかりつけ病院」がある。"
					,18=>"巨大地震発生後の、国や自治体の行動、提供サービスについて理解している。"
					,19=>"居住地への液状化の影響を、自治体のハザードマップなどの情報から、調査し、その意味（危険度）も理解している。"
					,20=>"巨大地震が発生した際、会社の業務を継続する際、在宅勤務の可否や出勤に関する労務規定がある。"
				);
$array_exam[5] = array(
					 21=>"パソコンやスマートホンなどを使って、震災に関する情報や家族の安否情報を入手する装備や仕組みを持っている。"
					,22=>"個人持ちの非常用品（手回し充電器やマスクなど）を常に携帯し、有事に備えている。"
					,23=>"近隣の方々とも、有事の際に助け合えるよう救命救護やボランティア活動について話し合っている。"
					,24=>"家族にとって重要な書類などは、銀行の貸金庫や耐火金庫などで、震災で被災しても保全されるようにしている。"
					,25=>"巨大地震への対応として、どのような事態が発生し、どのように対応するかについて、家族全員が同じ方向を向いて行動出来る。"
				);
$array_exam[6] = array(
					 26=>"居住地への津波の影響を、自治体のハザードマップや国などの情報から、標高と津波高を調査し、その意味（危険度）も理解し、対策を講じている。"
					,27=>"巨大地震が発生した場合を想定し、自治体のハザードマップやインターネットにより、現在の住まいや地域の地震に対する脆弱性を調査したことがある。"
					,28=>"地域やコミュニティ、会社や国・自治体の支援（救援のための物資、食料、水、日用品など）を理解している。"
					,29=>"備蓄品の選定や量を、優先度を付け計画的に購入している。"
					,30=>"震災による停電が長期間続くことを想定した対応策（発電機・蓄電池の装備、短期の引越など）を考えている。"
				);
$array_exam[7] = array(
					 31=>"巨大地震が発生した際、家族で何をするかの役割分担を定めている。"
					,32=>"毎年、巨大地震に関する基礎情報や被災想定が更新されるのに合わせて、我が家の対応内容、備蓄品の内容などを改訂している。"
					,33=>"巨大地震が発生した際に、自らを含め家族全員が惨事ストレスによる心的ダメージがあることを知っている。"
					,34=>"地震被災へのリスク対応として、地震保険に加入している。"
					,35=>"居住地の揺れ易さ（地盤増幅率）の数値をインターネット等から調べ把握している。"
				);
$array_exam[8] = array(
					 36=>"震災による停電が発生した後、復旧時に通電火災になることを危惧し、停電時に発熱系の電気製品の電源を全て切ることにしている。"
					,37=>"正確な地震被災情報をタイムリーに得るための情報源を確保している。"
					,38=>"震災で家族が負傷した場合、自宅での対応や処置方法について理解している。（例. AED や CPR など）"
					,39=>"震災のタイミング（平日、休日、夜間）や震源地（断層型、海溝型）などの相違によって、複数の被災シナリオを想定している。"
					,40=>"巨大地震が発生した際、利用している金融機関がどのような行動を取るか事前に把握している。"
				);
$array_exam[9] = array(
					 41=>"就労している会社が、巨大地震発生時あるいは発生後に、どのような体制や対応方法（BCP 対策）をするかを理解している。"
					,42=>"巨大地震発生時、学校に通う子供に対して、学校側の対応だけではなく、家庭で出来る対応も考えている。<u>（子供のいない家庭の場合は「防災士の資格を持っている。」を選択）</u>"
					,43=>"巨大地震発生後、就労している会社が被災した従業員に対し、どのような救援措置を実施するかについて理解している。"
					,44=>"巨大地震発生に備え、震度7クラスに耐えられる耐震/免震/制震の機能を持つ住居に住んでいる。"
					,45=>"救命講習の資格（修了証）を持っている。"
					,46=>"防災士の資格を持っている。"

				);


//-------------------------------------------------------------
//回答項目
//-------------------------------------------------------------
$array_answer[1] = array(
					 1=>"充実した内容のものを作成している"
					,2=>"標準的な内容のものを作成している"
					,3=>"最小限の内容のものを作成している"
					,4=>"不十分だが一応作成している"
					,5=>"作成しようと考えている"
					,6=>"全く考えたことが無い"
				);

$array_answer[2] = array(
					 1=>"充実した内容のものを作成している"
					,2=>"標準的な内容のものを作成している"
					,3=>"最小限の内容のものを作成している"
					,4=>"不十分だが一応作成している"
					,5=>"作成しようと考えている"
					,6=>"全く考えたことが無い"
				);
$array_answer[3] = array(
					 1=>"充実した内容のものを作成している"
					,2=>"標準的な内容のものを作成している"
					,3=>"最小限の内容のものを作成している"
					,4=>"不十分だが一応作成している"
					,5=>"作成しようと考えている"
					,6=>"全く考えたことが無い"
				);
$array_answer[4] = array(
					 1=>"充分な内容・量を理詰めに考え備蓄している"
					,2=>"標準的だろうと思える内容・量を備蓄している"
					,3=>"最小限だろうと思える内容・量を備蓄している"
					,4=>"内容・量とも不十分だがいくつか備蓄している"
					,5=>"持とうと考えている"
					,6=>"全く考えたことが無い"
				);
for($i=5;$i<=43;$i++){
	$array_answer[$i] = array(
					 1=>"全くその通りだと思う"
					,2=>"その通りだと思う"
					,3=>"少しその通りだと思う"
					,4=>"あまりそうは思わない"
					,5=>"そうは思わない"
					,6=>"全くそうは思わない"
				);
	if($i == 12){
		$array_answer[$i] = array(
					 1=>"年に一回以上は必ず訓練している"
					,2=>"ほぼ年に一回程度、訓練している"
					,3=>"数年に一度訓練している"
					,4=>"今まで一回訓練したことがある"
					,5=>"訓練しようと考えている"
					,6=>"全く無い"
				);
	}
	if($i == 21 || $i == 33){
		$array_answer[$i] = array(
					 1=>"充分な対策を取っている"
					,2=>"標準的な対策を取っている"
					,3=>"最小限の対策を取っている"
					,4=>"一部不十分なところがある"
					,5=>"不十分だと思う"
					,6=>"全く対策を取っていない"
				);
	}
	if($i == 22){
		$array_answer[$i] = array(
					 1=>"充分な装備をしている"
					,2=>"標準的な装備をしている"
					,3=>"最低限の装備をしている"
					,4=>"一部不十分な装備しかしていないところがある"
					,5=>"不十分な装備しかしていない"
					,6=>"全く装備していない"
				);
	}
	if($i == 24){
		$array_answer[$i] = array(
					 1=>"充分な対策を取っている"
					,2=>"標準的な対策を取っている"
					,3=>"最小限の対策を取っている"
					,4=>"一部不十分なところがある"
					,5=>"不十分だと思う"
					,6=>"全く対策を取っていない"
				);
	}
	if($i == 34){
		$array_answer[$i] = array(
					 1=>"充分な対策を取っている"
					,2=>""
					,3=>"加入を検討している"
					,4=>""
					,5=>""
					,6=>"加入しようとは思わない"
				);
	}
}
$array_answer[44] = array(
			 1=>"免震/制震住宅に住んでいる"
			,2=>"耐震住宅に住んでいる"
			,3=>"耐震/免震/制震機能を持った住宅に住むことが決まっている"
			,4=>"引越を検討している"
			,5=>"調査したことがある"
			,6=>"考えたことが無い"
		);
$array_answer[45] = array(
			 1=>"資格を持っている"
			,2=>"現在、講習を受けている"
			,3=>"過去資格を持っていたことがある"
			,4=>"過去講習を受けた事がある"
			,5=>"講習を受けようと思ったことがある"
			,6=>"講習を受けようと思ったことは無い"
		);
$array_answer[46] = array(
			 1=>"資格を持っている"
			,2=>"現在、講習を受けている"
			,3=>"過去資格を持っていたことがある"
			,4=>"過去講習を受けた事がある"
			,5=>"講習を受けようと思ったことがある"
			,6=>"講習を受けようと思ったことは無い"
		);

//ページ設定
if($_REQUEST[ 'next' ]){
	$pager = $_REQUEST[nextPage];
}else{
	if($_REQUEST[ 'page' ]){
		$pager = 1;
	}
}

//最大のページ数
$max = count($array_exam);
//where句の作成
$where = array();
//$where[ 'id'        ] = $_SESSION[ 'visit' ][ 'login_id' ];
$where[ 'testgrp_id'] = $_SESSION[ 'visit' ][ 'test_id'  ];
$where[ 'exam_id'   ] = $_SESSION[ 'visit' ][ 'exam_id'  ];
$where[ 'type'      ] = $first;

//受検時間の取得
$times = $lcp->getTime($where);

$time = $times[ 'minute_rest' ];
if($_REQUEST[ 'time' ]){
	$time = $_REQUEST[ 'time' ];
}else{
	$time = $time*60;
}
$where[ 'test_id' ] = $times[ 'id' ];
//--------------------------------
//回答登録
//--------------------------------

if(count($_REQUEST[ 'sec' ])){
	$sec = array();
	if(count($_REQUEST[ 'sec' ])){
		foreach($_REQUEST[ 'sec' ] as $key=>$val){
			$s = "ans".$key;
			$sec[$s] = $val;
		}
	}
	$lcp->setEaRst($sec,$where);
	
}


//スタート時間の登録
//初回ページ
if($_REQUEST[ 'page' ]){
	$flg = $t->checkExamState($where);
	if($flg[ 'exam_state' ] == 2){
		header("Location:".D_URL_TEST."?k=".$_REQUEST[ 'k' ]);
		exit();
	}
	$obj->setStartTime($where);
	$lcp->setEa($where);
}else{
	//初回以外　テストページの時
	if($temp == "page"){
		$flg = $t->checkExamState($where);
		if($flg[ 'exam_state' ] == 2){
			header("Location:".D_URL_TEST."?k=".$_REQUEST[ 'k' ]);
			exit();
		}
	}
}

//次のページ
if($_REQUEST[ 'next' ]){
	//エラーチェック
	$err = "";
	$cnt = count($array_exam[ $pager-1 ]);
	$st = ($pager-2)*$cnt+1;
	$end = $cnt*($pager-1);
	if($st >=41) $st = 41;
	if($end >=46) $end = 46;

	for($i=$st;$i<=$end;$i++){

		if(!$_REQUEST[ 'sec' ][ $i ]){
			$err = $i;
			break;
		}
	}
	if($err){
		//エラーがあった時はコチラ
		$errmsg = "設問".$err."が選択されていません。";
		$pager  = $_REQUEST[ 'nextPage' ]-1;
	}else
	if($max < $_REQUEST[ 'nextPage' ]){
		$tdetail = $obj->getTestPaper($where);
		include_once(D_PATH_HOME."/lib/keisan/functionSA.php");

		//----------------------------
		//最終ページ
		//----------------------------
		$update = array();
		$update[ 'where' ][ 'test_id' ] = $where[ 'test_id' ];
		$update[ 'where' ][ 'exam_id' ] = $where[ 'exam_id' ];
		list($rst) = $lcp->getScore($update);

/*
		$hensa = getHensa($rst);
		foreach($hensa as $key=>$val){
			if($val <= 20){
				$hensa[$key] = 20;
			}
			if($val >= 80){
				$hensa[$key] = 80;
			}
			
		}
		$mvid = $rst[ 'lcp_id' ];
		$lcp->setResult($hensa,$mvid);
*/
		//-------------------------------------
		//テスト側データ
		//------------------------------------
		$s_day  = split( '/', $tdetail['exam_date'] ); 
		$s_time = split( ':', $tdetail['start_time'] ); 

		$start_timestamp = mktime($s_time[0], $s_time[1], $s_time[2], $s_day[1], $s_day[2], $s_day[0]);
		$end_timestamp   = time();

		$end_timer = $end_timestamp - $start_timestamp;
		$e_time[0] = (int)($end_timer / 60);
		$e_time[1] = $end_timer % 60;

		$set = array();
		$set[ 'exam_state' ] = 2;
		$set[ 'level'      ] = $lv;
		$set[ 'exam_time'  ] = $e_time[0].":".$e_time[1];
		$set[ 'fin_exam_date' ] = sprintf("%04d-%02d-%02d %02d:%02d:%02d"
									,date("Y"),date("m"),date("d")
									,date("H"),date("i"),date("s")
									);
		
		$tbl = "t_testpaper";
		$obj->editDetail($tbl,$set,$where);

		//complete_flgの設定
		$t->editCompleteFlg($where);
		//メール配信
		$t->sendFinMail($where);
		$fin_disp = $test[ 'fin_disp' ];
		$temp = "Fin";

		
	}
}


if($_REQUEST[ 'back' ]){
	$pager = $_REQUEST[ 'backPage' ];
	//戻るボタンの時はチェックされた項目を編集
}

//テストデータ取得
$tdetail = $lcp->getEa($where);
$k=0;
for($j=2;$j<=35;$j++){
	if($pager >= $j){
		$st = 1+5*$k;
		$ed = 5*$k+5;
		$nowp = $ed/5;
		for($i=$st;$i<=$ed;$i++){
			if(!$tdetail['ans'.$i]){
				$pager = $nowp;
				$alerts = $pager."ページに誤りがあります。";
			}
		}
	}
	$k++;
}

$nextPage = $pager+1;
$backPage = $pager-1;
	
$exam = $array_exam[$pager];

//var_dump($answer);

?>